num randPrecision = 100;
num goldenAngle = 2.39996;
num pi = 3.14159;

num amount = 1;

num radius = 0.7;

str stemBlock = "minecraft:mushroom_stem";
for (num a = 0; a < amount; a = a + 1) {

    num length = 10+randomInt(5);
    
    num droop = 0.01;
    num verticalDirection = -1+randomInt(randPrecision)/randPrecision;
    num angle = randomInt(randPrecision)/randPrecision*2*pi;

    // Branch direction vector
    num dx = sin(angle);
    num dy = verticalDirection;
    num dz = cos(angle);
    // Normalize vector
    num mag = sqrt(pow(dx,2)+pow(dy,2)+pow(dz,2));
    dx = dx/mag;
    dy = dy/mag;
    dz = dz/mag;

    if (getBlock(dx*length, dy*length, dz*length) != "minecraft:air" ||
    getBlock(dx*length+3, dy*length, dz*length) != "minecraft:air" ||
    getBlock(dx*length-3, dy*length, dz*length) != "minecraft:air" ||
    getBlock(dx*length, dy*length, dz*length+3) != "minecraft:air" ||
    getBlock(dx*length, dy*length, dz*length-3) != "minecraft:air" ||
    getBlock(dx*length, dy*length+3, dz*length-3) != "minecraft:air" ||
    getBlock(dx*length, dy*length-3, dz*length-3) != "minecraft:air") break;

    for (num l = 0; l <= length; l = l + 0.1) {

        num r = (radius/length * -l/2) + radius;

        num cx = l*dx;
        num cy = l*dy;
        num cz = l*dz;
        
        for(num x = -r; x <= r; x = x + 1) {
            for(num y = -r; y <= r; y = y + 1) {
                for(num z = -r; z <= r; z = z + 1) {

                    block(cx + x, cy + y, cz + z, stemBlock, true);
                }  
            }
        }

        // Point vector down more
        dy = dy + droop;
        // Normalize vector
        mag = sqrt(pow2(dx)+pow2(dy)+pow2(dz));
        dx = dx/mag;
        dy = dy/mag;
        dz = dz/mag;

        if (l == length) structure(cx, cy+4, cz, "small_red_mushroom_cap", "NONE");
    }

    angle = angle + goldenAngle;
}


